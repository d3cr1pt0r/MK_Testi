<?phpnamespace MKTests;use Auth;use Illuminate\Database\Eloquent\Model;class Category extends Model{    protected $table = 'categories';    public function exams()    {        return $this->hasMany('MKTests\Exam', 'category_id');    }    public function user()    {        return $this->belongsTo('MKTests\User', 'user_id');    }    public function hasUserGenerated()    {        $results = Result::where('user_id', Auth::user()->id)->get();        foreach($results as $result) {            $exam = Exam::find($result->exam_id);            if ($exam->category_id == $this->id) {                return true;            }        }        return false;    }    public function generatedCodes()    {        $codes = [];        foreach($this->exams as $exam) {            foreach($exam->resultsUser() as $result) {                $codes[] = $result->code;            }        }        return $codes;    }    public function numberOfGeneratedCodes()    {        $num_codes = count($this->generatedCodes());        return $num_codes > 0 ? count($this->generatedCodes()) / count($this->exams) : count($this->generatedCodes());    }    public function numberOfGeneratedCodesUnique()    {        return count(array_unique($this->generatedCodes()));    }}